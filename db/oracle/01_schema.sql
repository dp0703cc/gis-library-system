-- 01_schema.sql
BEGIN EXECUTE IMMEDIATE 'DROP TABLE BORROW_RECORDS CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END; /
BEGIN EXECUTE IMMEDIATE 'DROP TABLE BOOK_INVENTORY CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END; /
BEGIN EXECUTE IMMEDIATE 'DROP TABLE BOOKS CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END; /
BEGIN EXECUTE IMMEDIATE 'DROP TABLE USERS CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END; /
BEGIN EXECUTE IMMEDIATE 'DROP TABLE LIBRARIES CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END; /

CREATE TABLE LIBRARIES (
  lib_id      NUMBER PRIMARY KEY,
  lib_name    VARCHAR2(100) NOT NULL,
  address     VARCHAR2(255),
  phone       VARCHAR2(20),
  open_hours  VARCHAR2(100),
  lon         NUMBER(10,6),
  lat         NUMBER(10,6),
  location    MDSYS.SDO_GEOMETRY
);

CREATE TABLE BOOKS (
  book_id   NUMBER PRIMARY KEY,
  isbn      VARCHAR2(20) UNIQUE NOT NULL,
  title     VARCHAR2(255) NOT NULL,
  author    VARCHAR2(100),
  publisher VARCHAR2(100)
);

CREATE TABLE BOOK_INVENTORY (
  inventory_id NUMBER PRIMARY KEY,
  book_id      NUMBER NOT NULL REFERENCES BOOKS(book_id),
  lib_id       NUMBER NOT NULL REFERENCES LIBRARIES(lib_id),
  status       VARCHAR2(20) DEFAULT 'AVAILABLE' CHECK (status IN ('AVAILABLE','BORROWED','ON_HOLD','READING_ROOM')),
  call_number  VARCHAR2(50)
);

CREATE TABLE USERS (
  user_id       NUMBER PRIMARY KEY,
  student_id    VARCHAR2(50) UNIQUE NOT NULL,
  name          VARCHAR2(50),
  password_hash VARCHAR2(255),
  home_lib_id   NUMBER REFERENCES LIBRARIES(lib_id)
);

CREATE TABLE BORROW_RECORDS (
  record_id      NUMBER PRIMARY KEY,
  inventory_id   NUMBER NOT NULL REFERENCES BOOK_INVENTORY(inventory_id),
  user_id        NUMBER NOT NULL REFERENCES USERS(user_id),
  borrow_date    DATE NOT NULL,
  due_date       DATE NOT NULL,
  return_date    DATE,
  borrow_lib_id  NUMBER NOT NULL REFERENCES LIBRARIES(lib_id),
  return_lib_id  NUMBER REFERENCES LIBRARIES(lib_id),
  status         VARCHAR2(20) DEFAULT 'PENDING' CHECK (status IN ('PENDING','ACTIVE','RETURNED','CANCELLED','OVERDUE'))
);
